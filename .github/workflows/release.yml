name: Release
on:
  push:
    branches:
      - main
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.12.0'

      # - name: Create GitVersion.yml
      #   run: |
      #     cat <<EOF > GitVersion.yml
      #     assembly-versioning-scheme: MajorMinorPatch
      #     assembly-file-versioning-scheme: MajorMinorPatch
      #     assembly-informational-format: '{InformationalVersion}'
      #     mode: Mainline
      #     increment: Inherit
      #     continuous-delivery-fallback-tag: ci
      #     major-version-bump-message: '(breaking|major|incompatible):'
      #     minor-version-bump-message: '(feature|minor|enhancement|new|update|improvement|upgrade|feat):'
      #     patch-version-bump-message: '(fix|patch|bugfix|hotfix|correction|adjustment|tweak):'
      #     no-bump-message: '(none|skip|no-release|trivial|docs|documentation|style|refactor|chore|test):'
      #     legacy-semver-padding: 4
      #     build-metadata-padding: 4
      #     commits-since-version-source-padding: 4
      #     tag-pre-release-weight: 60000
      #     commit-message-incrementing: Enabled
      #     merge-message-formats: {}
      #     update-build-number: true
      #     EOF

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0

      - name: Display semver
        run: |
          echo ${{ env.semVer }}

      # - name: Release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #   run: npm run release

      # - name: Get release
      #   id: get_release
      #   run: echo "NEXT_VERSION=$(npm run package-version --silent)" >> $GITHUB_OUTPUT

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Push docker image release
      #   uses: docker/build-push-action@v5
      #   with:
      #     push: false
      #     tags: cnieg/secret-certificat-azure-exporter:${{ steps.get_release.outputs.NEXT_VERSION }}
